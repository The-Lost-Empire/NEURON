{"version":3,"sources":["components/SignIn.js","components/Navigation.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","paper","display","flexDirection","alignItems","margin","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","footer","background","padding","Login","classes","Fragment","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","color","Grid","container","item","xs","Link","href","target","rel","Navigation","AppBar","position","Toolbar","noWrap","Copyright","align","Date","getFullYear","Footer","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e341363.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: theme.spacing(3, 0, 2),\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <main>\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"API Key\"\n            label=\"API Key\"\n            name=\"apiKey\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"https://politicsandwar.com/account/\" target=\"_blank\" rel=\"noreferrer noopener\" variant=\"body2\">\n                Don't know your API key? Find it here\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AssistantIcon from '@material-ui/icons/Assistant';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n   icon: {\n     marginRight: theme.spacing(2),\n   },\n }));\n\nconst Navigation = () => {\n   const classes = useStyles();\n    return (\n       <div>\n         <CssBaseline />\n         <AppBar position=\"relative\">\n         <Toolbar>\n            <AssistantIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n               Neuron\n            </Typography>\n         </Toolbar>\n         </AppBar>\n       </div>\n    );\n}\n \nexport default Navigation;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8),\n    },\n  }));\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"#\">\n          The Lost Empire\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default function Footer() {\n    const classes = useStyles;\n\n    return (\n        <Container className={classes.footer}>\n            <Copyright />\n        </Container>\n    )\n}","import React, { Component } from 'react';\n\nimport SignIn from './components/SignIn';\nimport Navigation from './components/Navigation';\n\nimport Footer from './components/Footer';\n \nexport default class App extends Component {\n  render() {\n    return (      \n      <div>\n        <Navigation />\n        <SignIn />\n        <Footer />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}